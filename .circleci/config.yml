version: 2
jobs:
  build:
    machine: true
    steps:
      - checkout
      - run:
          name: make dummy env file
          command: touch .env
      - run:
          name: docker-compose build
          command: docker-compose run --rm rails bundle install
      - run:
          name: sleep for waiting launch db
          command: sleep 1
      - run:
          name: rubocop
          command: docker-compose run --rm rails bundle exec rubocop --config .rubocop.yml
      - run:
          name: "before_test: setup db"
          command: docker-compose run --rm rails rails db:create db:migrate
      - run:
          name: rspec
          command: >
            docker-compose run
            -e DEVELOPER_NAME=$DEVELOPER_NAME
            -e APP_VERSION=$APP_VERSION
            -e PROJECT_NAME=$PROJECT_NAME
            -e TWITTER_API_KEY=$TWITTER_API_KEY
            -e TWITTER_API_SECRET=$TWITTER_API_SECRET
            -e FACEBOOK_APP_ID=$FACEBOOK_APP_ID
            -e FACEBOOK_APP_SECRET=$FACEBOOK_APP_SECRET
            --rm rails bundle exec rake spec SPEC_OPTS="--color --fail-fast"
      - run:
          name: docker-compose down
          command: docker-compose down

  auto_bundle_update:
    docker:
      - image: ruby:2.5.1-alpine
        environment:
          TZ: "/usr/share/zoneinfo/Asia/Tokyo"
    steps:
      - run:
          name: Install System Dependencies
          command: |
            # See also https://circleci.com/docs/2.0/custom-images/#adding-required-and-custom-tools-or-files
            apk add --update --no-cache git openssh-client tar gzip ca-certificates tzdata alpine-sdk postgresql-dev
            gem install -N bundler
      - checkout
      - restore_cache:
          name: Restore bundler cache
          keys:
            - gems-{{ .Environment.COMMON_CACHE_KEY }}-{{ checksum "Gemfile.lock" }}
            - gems-{{ .Environment.COMMON_CACHE_KEY }}-
      - run:
          name: Setup requirements for continuous bundle update
          command: gem install -N circleci-bundle-update-pr
      - deploy:
          name: Continuous bundle update
          command: "circleci-bundle-update-pr ${GITHUB_USER_NAME} ${GITHUB_USER_EMAIL}"

workflows:
  version: 2

  build_and_deploy:
    jobs:
      - build

  auto_bundle_update:
    triggers:
      - schedule:
          cron: "00 21 * * 4" # AM 6:00 fri
          filters:
            branches:
              only:
                - master
    jobs:
      - auto_bundle_update
