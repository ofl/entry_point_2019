version: "3"
services:
  rails:
    env_file: .env
    build:
      context: .
      dockerfile: ./docker/rails/Dockerfile
    image: ${DEVELOPER_NAME}/${PROJECT_NAME}_rails:${APP_VERSION}
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - bundle-volume:/usr/local/bundle
      - .ash_history:/root/.ash_history
      - .pry_history:/root/.local/share/pry/pry_history
      - /app/vendor
      - /app/tmp
      - /app/log
      - /app/.git
      - /app/node_modules
      - yarn-cache:/usr/local/share/.cache/yarn/v2
    depends_on:
      - postgres
      - redis
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecurepass
      POSTGRES_DB: app_development
      REDIS_URL: redis://redis:6379
    command: bundle exec rails s -b 0.0.0.0 -p 3000

  postgres:
    env_file: .env
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecurepass
      POSTGRES_DB: app_development
      PGDATA: /var/lib/postgresql/data
    volumes:
      - postgresql-data:/var/lib/postgresql/data

  yarn:
    build:
      context: .
      dockerfile: ./docker/yarn/Dockerfile
    image: ${DEVELOPER_NAME}/${PROJECT_NAME}_yarn:${APP_VERSION}
    # command: yarn watch
    ports:
      - "3007:3007"
      - "3008:3008"
      - "9001:9001" # storybook
    volumes:
      - .:/app
      - ./node_modules:/app/node_modules
    depends_on:
      - rails

  redis:
    image: redis:4.0.14-alpine
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes

volumes:
  postgresql-data:
    driver: local
  bundle-volume:
    driver: local
  yarn-cache:
    driver: local
  redis-data:
    driver: local
